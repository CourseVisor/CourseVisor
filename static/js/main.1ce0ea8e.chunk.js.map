{"version":3,"sources":["NavBarView/NavBarView.js","NewReviewView/NewReviewView.js","SubmitButtonView/SubmitButtonView.js","HomePageView/HomePageView.js","App.js","serviceWorker.js","index.js"],"names":["NavBarView","withStyles","root","background","borderRadius","border","color","height","padding","boxShadow","label","textTransform","fontFamily","fontWeight","position","width","left","top","Button","className","Component","SubmitInput","TextField","ReviewContainer","Container","CancelButton","display","float","text","SubmitButton","NewReviewView","props","updateCourse","event","setState","course","target","value","updateInstructor","instructor","changeWorkloadRating","newRating","workloadRating","changeGradingRating","gradingRating","changeInstructorRating","instructorRating","updateComments","comments","validateForm","a","clicked","condition","state","validate","addToFirebase","toUpperCase","instructorReview","ratingWorkload","ratingGrading","ratingInstructor","comment","firebase","database","ref","push","required","placeholder","variant","onChange","this","Grid","container","direction","justify","alignItems","item","xs","Tooltip","title","IconButton","aria-label","rating","starDimension","starRatedColor","starHoverColor","changeRating","numberOfStars","name","multiline","rows","helperText","length","inputProps","maxLength","to","onClick","StyledButton","backgroundColor","margin","fontSize","SubmitButtonView","HomePageView","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ce0ea8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./NavBarView.scss\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  withStyles\n} from \"@material-ui/core/styles\";\n\n// import { makeStyles } from '@material-ui/core/styles';\n\n// const useStyles = makeStyles(theme => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   input: {\n//     display: 'none',\n//   },\n// }));\n\n// const theme = createMuiTheme({\n//   overrides: {\n//     // Style sheet name\n//     MuiButton: {\n//       // Name of the rule\n//       text: {\n//         // Some CSS\n//         position: 'absolute',\n//         // left: '14.17%',\n//         // right: '14.17%',\n//         // top: '27.5%',\n//         // bottom: '25%',\n\n//         width: '90px',\n//         height: '30px',\n//         left: '1150px',\n//         top: '20px',\n\n//         fontFamily: 'Roboto',\n//         fontStyle: 'normal',\n//         fontWeight: 'bold',\n//         fontSize: '12px',\n//         lineHeight: '14px',\n//         display: 'flex',\n//         alignItems: 'center',\n//         textAlign: 'center',\n//         textTransform: 'capitalize',\n\n//         color: '#FFFFFF',\n//       },\n\n//       // root: {\n//       //   position: 'relative',\n//       // }\n//     },\n//   },\n// });\n\nconst StyledButton = withStyles({\n  root: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    borderRadius: 3,\n    border: 0,\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\",\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\"\n  },\n  label: {\n    textTransform: \"capitalize\",\n    fontFamily: \"Roboto\",\n    fontWeight: \"bold\",\n\n    position: \"absolute\",\n    width: \"90px\",\n    height: \"30px\",\n    left: \"1150px\",\n    top: \"20px\"\n  }\n})(Button);\n\nexport class NavBarView extends Component {\n  // constructor(props){\n  //   super(props);\n  // }\n\n  render() {\n    // const classes = useStyles();\n\n    return (\n      <nav className=\"navBarView\">\n        <Button className=\"signIn\">Sign In</Button>\n        <Button className=\"signUp\">Sign Up</Button>\n\n        {/* <StyledButton>Styled Button</StyledButton> */}\n      </nav>\n    );\n  }\n}\n\nexport default NavBarView;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./NewReviewView.scss\";\nimport {\n  Container,\n  TextField,\n  withStyles,\n  Tooltip,\n  IconButton,\n  Grid,\n  Button\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport HelpOutlineOutlinedIcon from \"@material-ui/icons/HelpOutlineOutlined\";\nimport StarRatings from \"react-star-ratings\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst SubmitInput = withStyles({\n  root: {\n    width: \"100%\",\n    \"vertical-align\": \"middle\"\n  }\n})(TextField);\n\nconst ReviewContainer = withStyles({\n  root: {\n    width: \"60%\"\n  }\n})(Container);\n\nconst CancelButton = withStyles({\n  root: {\n    \"background-color\": \"transparent\",\n    \"border-radius\": \"20px\",\n    display: \"inline-block\",\n    \"text-transform\": \"capitalize\",\n    \"border-color\": \"#42005a\",\n    width: \"90px\",\n    height: \"40px\",\n    \"vertical-align\": \"middle\",\n    float: \"left\"\n  },\n  text: {\n    color: \"#42005a\",\n    textTransform: \"capitalize\"\n  }\n})(Button);\n\nconst SubmitButton = withStyles({\n  root: {\n    \"justify-content\": \"flex-end\",\n    display: \"inline-block\",\n    \"background-color\": \"#BD36EC\",\n    \"border-radius\": \"20px\",\n    width: \"90px\",\n    height: \"40px\",\n    \"vertical-align\": \"middle\",\n    float: \"right\"\n  },\n  text: {\n    color: \"white\",\n    textTransform: \"capitalize\"\n  }\n})(Button);\n\nclass NewReviewView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: \"\",\n      instructor: \"\",\n      workloadRating: 0,\n      gradingRating: 0,\n      instructorRating: 0,\n      comments: \"\",\n      clicked: false,\n      validate: null\n    };\n  }\n  updateCourse = event => {\n    this.setState({ course: event.target.value });\n  };\n  updateInstructor = event => {\n    this.setState({ instructor: event.target.value });\n  };\n  changeWorkloadRating = newRating => {\n    this.setState({\n      workloadRating: newRating\n    });\n  };\n  changeGradingRating = newRating => {\n    this.setState({\n      gradingRating: newRating\n    });\n  };\n  changeInstructorRating = newRating => {\n    this.setState({\n      instructorRating: newRating\n    });\n  };\n  updateComments = event => {\n    this.setState({\n      comments: event.target.value\n    });\n  };\n  validateForm = async () => {\n    this.setState({ clicked: true });\n    const condition =\n      this.state.workloadRating === 0 ||\n      this.state.gradingRating === 0 ||\n      this.state.instructorRating === 0 ||\n      !this.state.course ||\n      !this.state.instructor;\n    await this.setState({\n      validate: condition ? false : true\n    });\n    if (this.state.validate) {\n      this.addToFirebase();\n    }\n  };\n  addToFirebase = () => {\n    const course = this.state.course.toUpperCase();\n    const instructor = this.state.instructor.toUpperCase();\n    const instructorReview = {\n      ratingWorkload: this.state.workloadRating,\n      ratingGrading: this.state.gradingRating,\n      ratingInstructor: this.state.instructorRating,\n      comment: this.state.comments\n    };\n    firebase\n      .database()\n      .ref(`courseTeacherReview/${course}/instructors/${instructor}/reviews`)\n      .push(instructorReview);\n  };\n  render() {\n    return (\n      <div className=\"NewReviewView\">\n        <ReviewContainer>\n          <h2 className=\"submit-new-review\">Submit New Review</h2>\n          <form className=\"submit-form\">\n            <div className=\"submit-input\">\n              <SubmitInput\n                required\n                label=\"Course\"\n                placeholder=\"Please enter the course prefix and code, e.g. INFO 442\"\n                variant=\"outlined\"\n                onChange={this.updateCourse}\n              />\n            </div>\n            <div className=\"submit-input\">\n              <SubmitInput\n                required\n                label=\"Instructor\"\n                placeholder=\"Please enter the instructor's full name\"\n                variant=\"outlined\"\n                onChange={this.updateInstructor}\n              />\n            </div>\n            <div className=\"ratings-field\">\n              <p className=\"ratings\">Ratings *</p>\n              <div className=\"star-ratings\">\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={2}>\n                    <span className=\"rating-header\">Workload</span>\n                  </Grid>\n                  <Grid item xs={10}>\n                    <Tooltip title=\"The workload of this course is rated from 1 star to 5 stars. 1 represents the most work and 5 represents minimal work\">\n                      <IconButton aria-label=\"help\">\n                        <HelpOutlineOutlinedIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <StarRatings\n                      rating={this.state.workloadRating}\n                      starDimension=\"2rem\"\n                      starRatedColor=\"#7800A2\"\n                      starHoverColor=\"#D88AF3\"\n                      changeRating={this.changeWorkloadRating}\n                      numberOfStars={5}\n                      name=\"rating\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div className=\"star-ratings\">\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={2}>\n                    <span className=\"rating-header\">Grading</span>\n                  </Grid>\n                  <Grid item xs={10}>\n                    <Tooltip title=\"The grading of this course is rated from 1 star to 5 stars. 1 represents strict grading and 5 represents lenient grading\">\n                      <IconButton aria-label=\"help\">\n                        <HelpOutlineOutlinedIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <StarRatings\n                      rating={this.state.gradingRating}\n                      starDimension=\"2rem\"\n                      starRatedColor=\"#7800A2\"\n                      starHoverColor=\"#D88AF3\"\n                      changeRating={this.changeGradingRating}\n                      numberOfStars={5}\n                      name=\"rating\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div className=\"star-ratings\">\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={2}>\n                    <span className=\"rating-header\">Instructor</span>\n                  </Grid>\n                  <Grid item xs={10}>\n                    <Tooltip title=\"The instructor of this course is rated from 1 star to 5 stars. 1 represents ineffective and 5 represents effective\">\n                      <IconButton aria-label=\"help\">\n                        <HelpOutlineOutlinedIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <StarRatings\n                      rating={this.state.instructorRating}\n                      starDimension=\"2rem\"\n                      starRatedColor=\"#7800A2\"\n                      starHoverColor=\"#D88AF3\"\n                      changeRating={this.changeInstructorRating}\n                      numberOfStars={5}\n                      name=\"rating\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n            <div className=\"submit-input\">\n              <SubmitInput\n                multiline\n                rows=\"6\"\n                value={this.state.comments}\n                onChange={this.updateComments}\n                label=\"Comments\"\n                variant=\"outlined\"\n                helperText={`${this.state.comments.length}/3000`}\n                inputProps={{ maxLength: 3000 }}\n              />\n            </div>\n            <div className=\"buttons\">\n              <Link to=\"/\">\n                <CancelButton variant=\"outlined\">Cancel</CancelButton>\n              </Link>\n              <SubmitButton onClick={this.validateForm}>Submit</SubmitButton>\n            </div>\n            {this.state.clicked && !this.state.validate && (\n              <span className=\"error-message\">\n                * Please complete all the required fields\n              </span>\n            )}\n          </form>\n        </ReviewContainer>\n      </div>\n    );\n  }\n}\nNewReviewView.propTypes = {};\n\nexport default NewReviewView;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./SubmitButtonView.scss\";\nimport { withStyles, createMuiTheme, MuiThemeProvider, Link } from \"@material-ui/core\";\n\nconst StyledButton = withStyles({\n  root: {\n    backgroundColor: \"#BD36EC\",\n    borderRadius: \"20px\",\n    color: \"white\",\n    margin: \"20px\",\n    fontSize: \"12px\",\n    textTransform: \"none\",\n    fontWeight: \"bold\",\n    width: \"180px\",\n    height: \"40px\",\n    boxShadow: \"2px 2px 4px rgba(0, 0, 0, 0.25)\",\n    \"&:hover\": {\n      background: \"#D88AF3\"\n    }\n  }\n})(Button);\n\nclass SubmitButtonView extends Component {\n  //constructor(props){\n  //  super(props);\n  //}\n  render() {\n    return (\n      <div className=\"SubmitButtonView\">\n        <StyledButton className=\"SubmitNew\">Submit New Review</StyledButton>\n      </div>\n    );\n  }\n}\n//SubmitButtonView.propTypes = {\n//}\n\nexport default SubmitButtonView;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SubmitButtonView from \"../SubmitButtonView/SubmitButtonView.js\";\nimport \"./HomePageView.scss\";\nimport { Link } from \"react-router-dom\";\n\nclass HomePageView extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"HomePageView\">\n        <h1 className=\"search-text\">\n          Search for a <span className=\"course\">course</span> review\n        </h1>\n        <div>* insert SearchBarView here *</div>\n        <div className=\"or-text\">-- or --</div>\n        <Link to=\"/new-review\">\n          <SubmitButtonView />\n        </Link>\n      </div>\n    );\n  }\n}\nHomePageView.propTypes = {};\n\nexport default HomePageView;\n","import React, { Component } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n// import firebase from 'firebase/app';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\n\nimport { NavBarView } from \"./NavBarView/NavBarView.js\";\nimport NewReviewView from \"./NewReviewView/NewReviewView\";\nimport HomePageView from \"./HomePageView/HomePageView\";\n// function App() {\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// return\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let content = null;\n\n    content = (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n            <NavBarView />\n            <Route exact path=\"/\" component={HomePageView} />\n            <Route path=\"/new-review\" component={NewReviewView} />\n        </div>\n      </Router>\n    );\n\n    return content;\n  }\n}\n\nexport default App;\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Button from '@material-ui/core/Button';\n\n// function App() {\n//   return (\n//     <Button variant=\"contained\" color=\"primary\">\n//       Hello World\n//     </Button>\n//   );\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBa558Gxs8J_c2ezCp8AeWTvkJXAKYBeAM\",\n  authDomain: \"coursevisor.firebaseapp.com\",\n  databaseURL: \"https://coursevisor.firebaseio.com\",\n  projectId: \"coursevisor\",\n  storageBucket: \"coursevisor.appspot.com\",\n  messagingSenderId: \"578335897867\",\n  appId: \"1:578335897867:web:248b1e5c16a035e0b54a0e\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}